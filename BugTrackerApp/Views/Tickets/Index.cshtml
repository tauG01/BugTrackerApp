@model IEnumerable<Ticket>
@{
    ViewData["Title"] = "Index";
}

<div class="table-responsive" id="view-all">

    <h3 class="card-title text-primary">Bugs</h3>

    <p class="card-description">
        <a onclick="showInPopup('@Url.Action("Create","Tickets",null,Context.Request.Scheme)', 'New Bug')" class="btn btn-primary text-white">Submit Bug</a>
    </p>

    <table class="table" id="userTable">
        <thead>
            <tr class="text-left">
                <th>@Html.DisplayNameFor(model => model.Title)</th>
                <th>@Html.DisplayNameFor(model => model.Project)</th>
                @*<th>@Html.DisplayNameFor(model => model.Description)</th>*@
                <th>Status</th>
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin") || User.Identity.IsAuthenticated && User.IsInRole("ProjectManager"))
                {
                    <th>@Html.DisplayNameFor(model => model.TicketStatus)</th>
                }
                <th>@Html.DisplayNameFor(model => model.Created)</th>
                @*<th>@Html.DisplayNameFor(model => model.Modified)</th>*@
                <th>Details</th>
                <th>Actions</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Project.Name)
                    </td>
                    @*<td class="align-middle">
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>*@

                    <td class="align-middle">
                        @if (item.TicketStatus == BugTrackerApp.Data.Enums.TicketStatus.Open)
                        {
                            <label class="badge badge-warning">@Html.DisplayFor(modelItem => item.TicketStatus)</label>
                        }
                        else
                        {
                            <label class="badge badge-success">@Html.DisplayFor(modelItem => item.TicketStatus)</label>
                        }
                    </td>

                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin") || User.Identity.IsAuthenticated && User.IsInRole("ProjectManager"))
                    {
                        <td class="align-middle">
                            <form method="post" asp-action="UpdateStatus">
                                <input type="hidden" name="TicketId" value="@item.Id" />
                                <select class="StatusSelect" asp-for="@item.TicketStatus)"
                                        asp-items="Html.GetEnumSelectList(typeof(BugTrackerApp.Data.Enums.TicketStatus))"
                                        name="TicketStatus">
                                </select>
                            </form>
                        </td>
                    }

                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>

                    @*<td class="align-middle">
                            @Html.DisplayFor(modelItem => item.Modified)
                        </td>*@

                    <td class="align-middle">
                        <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Id"> Details </a>
                    </td>

                    <td class="align-middle">
                        <a class="btn btn-outline-primary" onclick="showInPopup('@Url.Action("Edit","Tickets",new { id = item.Id },Context.Request.Scheme)', 'Update Bug')"> Edit </a>
                        @*<a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id"> Edit </a>*@ |
                        @*<a class="btn btn-danger text-white" asp-action="Delete" asp-route-id="@item.Id"> Delete </a>*@
                        <form asp-action="Delete" asp-route-id="@item.Id" onsubmit="return jQueryAjaxDelete(this)" class="d-inline">
                            <input type="hidden" asp-for="@item.Id" />
                            <input type="submit" value="Delete" class="btn btn-outline-danger" />
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>
@section scripts{
    <script>
        $(function () {
            $(".StatusSelect").change(function () {
                $(this).closest('form').submit();
            })
        })
    </script>
}